
----------------------28/01/2017
siguiente reunion martes 14de marzo a las 12


el metodo guardar se puede ir fuera y usar solousar guardarOactualizar(guardar no funciona con objetos complejos)

Class LibreriaBBDDExeption extends RunTimeException{
	private exeption causa;
	private Strin mensaje;
	
	LibreriaBBDDExeption(exeption e){
		this.causa=e;
		this.mensaje =null;
	}
	LibreriaBBDDExeption(exeption e, String m){
		this.causa=e;
		this.mensaje =m;
	}
	public getCause(){
		retunr this.causa;
	}
	public get mensage(){
		if(mensaje==nul)
			return this.causa.getMenssage
		else
			retun this.mensaje;
	}
}
	
al extender esta exepcion no es obligatorio hacer try cath 
y al usar solo una clase para todas las exepciones no hay que usar multiples cath


en el codigo usar esta forma de try cathc para que solo se llege una expcion
try{
	
}cath(Exeption e){
	trows new LibreriaBBDDExeption(e);
}

hacer el metodo 
activate(Object o, int profundidad)
	para todos los punteros de objetos No simples
	si es nulo
		hacer executa querry del objeto que deberia ir alli con uno menos de profundidad
	else
		activar ese objeto(ob) con la base de datos activate(ob, profundidad-1)
		

que recibe un objeto previamente ya cargado si no falla
y activa sus nulos con las base de datos siempre teniendo en cuentra profundiad
tambien activa los nulos de sus objetos 


al guardar un objeto deve guardarle en los dos mapas 
esto supuno que al cargar de la base de datos no te devuelve de la base de datos si no el objeto que te dio el usuario para guardar
esto puede suponer que el usuario le hhala modificado cosa que no pasa nada
pra evitarlo metodo refres que machaque el objeto y le cree si o si
